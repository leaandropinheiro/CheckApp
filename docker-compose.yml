services:
  postgres:
    container_name: check-db
    networks:
      - "backdb"
    image: postgres:16
    restart: on-failure
    volumes:
      - db-data:/volumes:/var/lib/postgresql/check-app
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      PGUSER: ${PGUSER}
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
    ports:
      - '5432:5432'
    healthcheck:
      test: "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
      interval: "10s"
      timeout: "5s"
      retries: 5

  backend:
    links:
      - "postgres:backend"
    container_name: 'backend'
    networks:
      - "backdb"
      - "backfront"
    image: gabrielguidini/checkapp-back:latest
    build:
      context: ./check-app
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - postgres
    ports:
      - '8080:8080'


  frontend:
    container_name: 'frontend'
    networks:
      - backfront
    image: gabrielguidini/checkapp-front:latest
    build:
      context: ./checkapp-frontend
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - backend
      - postgres
    ports:
      - "3000:3000"


networks:
  backdb:
    driver: bridge
  backfront:
    driver: bridge


volumes:
  db-data: